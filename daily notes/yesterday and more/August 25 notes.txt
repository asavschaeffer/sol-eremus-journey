August 25 notes

I woke up at 5:0 something and tried to avoid moving too much so my girlfriend could sleep more. She got up with some ridiculous burst of energy and convinced me to head with her on the train to the coffee shop near her work in the 38 C heat just to take the train back home to shower, shamba, and eat breakfast. I made it to the starbucks in town at around 11:00 and got an iced latte. I put one packet of sugar in it.

I've decided I need to just go into web development, and since I got the Codecademy pro half off subscription I'm just going balls deep into the front-end web engineer 350 hour career certification program.

My reasoning is 1) I need a nice personal website.
		2) I need a nice website for my game.
		3) Web games are the best for recruitment.
		4) Web dev is enmployjable.

I can iteratively improve my personal website v0 from yesterday with the stuff I learn in this certification program, and I will keep my learning progress in these notes organized by day.

Lesson 1: How the internet works

* How is data sent from one computer to another?
		Data at a server requested with HTTP get are sent to browser, 		which renders the HTML structure, CSS formatting, and JS 		interactivity. When the browser uploads information like a 		username, a HTTP post request goes from the browser to the 		server.

* What is the relationship between a browser and a server?
		the browser renders the data it "GET"s from the server, the 		server stores the data "POST"ed by the user.The relationship 		is in parallel, meaning multiple data can be sent at the same 		time in each direction

* How is code turned into the experience that users see in their 
  browsers?
		HTML outlines the structure of the data, CSS 
		dictates the style, and JavaScript takes the 
		website from static to interactive
* How has the web and web development changed from its invention 
  to today?
		The internet was first invented as a means of 
		sending data for the purposes of U.S.A. Military 
		Defence stretegy. Tim Barners-Lee invented the 
		World Wide Web to introduce a user-friendly 
		interface, multimedia content and interlinked 
		websites that allowed wider society to interact 
		with eachother. These earlier static websites were 
		replaced with dynamic user xperiences without 
		forcing the user to reload, thanks to technological 
		advances like jQuery which could fetch data while 
		the web page is running, and web frameworks such 
		as Spring, Django, and Ruby-On-Rails, which helped 
		to store the new user-generated content that 
		became a staple of websites that came to exemplary 
		of the "Web 2.0"

Lesson 2: What is Web Development
"Having web development skills allows you to take your big ideas 
— whether it’s a simple website, a complex web application, or 
even a browser game — and build them on the web!"

	HTML:
		ML = markup language
		Markup is done through tags that surround an 
		element to annotate it to provide information 
		about the type of information that element is. 
		Some examples of tags are header, paragraph, 
		anchor, button, link

		HT = hypertext
		text that is linked to other text. Despite all the 
		ways that links are provided nowadays such as through images 
		and buttons, the fundamental situation is you are 
		clicking through links to go from one HTML page to
 		another, or technically speaking, the web is a 
		collection of hyperlinked documents.

	CSS:
		selectors
		specify the html elements to apply the style to, 
		and visual rules to detail the style

	JS: 
		functions
		same as usual define and call whenever you need it

		Events
		user behaviors that JavaScript can respond to, 
		for example, mousing over an HTML element or 
		resizing their window, scrolling, holding down 
		click.

		"when an event is fired, a function is executed"

Lesson 3: Fundamentals
https://discuss.codecademy.com/t/can-id-attributes-only-be-used-on-div-tags/299836/5

	HTML:
		)Adding attributes to tags provides a purpose to the tag. These
		are name and value.
			*id tag can specify repeated contents
			* other purposes as well which I must find
		)Displaying text
			*<p> paragraph is a block of plain text
			*<span> used to separate small pieces of content that are 
				on the same line
		)Style with HTML
			*curious because CSS is for style 
			*<em> does emphasis generally it is italic
			*<strong> generally does bold

		)line break is <br>
			*rule of thumb is we do not use HTML to dictate
			 the location of objects
			* HTML is for structure, not style
	off the grid is driving me insane	
		)lists 
			*unordered is bulleted list
			*^is <ul> <li></li> </ul>

			*ordered is numbered list
			^is <ol> <li></li> </ol>
			
			*li shouldn't exist without outside of parents
			*naturally the set theorists are very pleased that lists
			 can be constructed out of any element valid within <body>
		
Lesson 3.5: HTML Structure and Semantics
https://www.youtube.com/watch?v=uxmB8MlO3m8

	Semantics:
		)Semantic HTML uses tags which best convey the underlying meaning of
		 the content the tag contains.
			!Headings descend in number, given minimal nesting structures
			^this ensures the smooth reading experience for those
			 using assistive software such as screen readers
			*if a person using a screen reader was cycling through the 
			 headings (ex. h1, then h2's then h3's) and the reader 
			 reported nothing for a given level of heading (h4's in this 
			 case), then the user would likely stop cycyling through the 
			 headings under the assumption that there are no more headings 
			(potentially missing any h5's and h6's).

	Structure:
	 	)hierarchy principles also keep the code organized
			^Readibility, Accessibility, Styling Ease

		)https://bitsofco.de/sectioning-content-in-html5/
			<div>
			*Authors are strongly encouraged to view the div element as an 
			 element of last resort, for when no other element is suitable.

			<section>
			 *A general rule of thumb is that the section element is appropriate 
			  only if the element’s contents would be listed explicitly in the 
			  document’s outline.

			<article>
			 *Contents of an <article> should be self contained; able to be 
			  isolated from the rest of the page and still be meaningful.

I originally used <h1> tag for my website title that carries over to each of the pages.
I have <h3> as the sub title, which I need to change, but it just seems too large at <h2>.
The title of each page is tagged using <h2>, like Blog, Projects, Resume, etc. on their 
respective pages. The sections, such as the different parts of the resume, are tagged with 
<h3>. The entries within each of those sections, like the schools I attended for the 
education section, or the jobs I worked for the Experience section, are tagged with <h4>. 
Further details about eachare tagged with <p>.
I refactored my resume page using one div to wrap the insite links, and another div from the 
page title down to the very bottom of the body. For the rest, I used <section> around each of 
the resume categories, such as Skills, Experience, Education, and Certifications. Nested in
each section, each individual resume entry were wrapped in <article>, such as The UBC Logo,
name, my major, and the years I attended was one article within the Education section.
To be honest, just going off of the standalone rule it probably would make 
more sense to just do them all as section, because just a piece of a resume floating around
doesn't really make that much sense.

	Tags:
		)Chelsea reorganized a divitis document, using the following tags
		
			*<header> is this for the h1 or for the website title?
			*<nav>	for links between pages of the website "navigation"
			*<main>	I assume its for the main content of the page
			*<footer>	self explanatory
			*<p>	paragraph
			*<section>
			*<small>	makes sense for copyright information
			*https://developer.mozilla.org/en-US/docs/Web/HTML/Element

		)https://internetingishard.com/html-and-css/semantic-html/
		)https://www.youtube.com/watch?v=OGg8A2zfWKg&t=0s

		
Lesson 4: HTML Document Standards

	Attributes:
		)Attributes have no order. They can be written in any order, though usually 
		 we like to see the id and class attributes out front, and in that order. 
		 That’s just for reading, though. The browser makes no distinction of 
		 ordering or attributes.

	Anchors: Relative paths are also advantageous if one moves entire website from one 
		 domain to a different domain altogether. You don't change the local links. 
			*./refers to the current working directory

	Same Page Anchors:
		)An id can be linked to within a page with href="#id" within <a></a>

	Comments:
		)Comments begin with <!-- and end with -->

I'm going to comment all my website code now

Lesson 4.5: HTML Document Standards

	Title: 64 characters in length, very important to drive traffic to the site

Alright well its time I retired for the night, it is 10:30 and starbucks is kicking me out. 
My girlfriend said she wouln't go to Izekaya tonight but she is still
out right now with her favorite senpai from work who makes her laugh so hard
it hurts. She said I can't come out and meet them because it's "ase ase".
She would never cheat!! But she always gets mad at me and thinks I'm going
to cheat on her. Hmm...

	




			
		
		


		